Create Database students_db ;
    Use students_db ;
    Create Table Students (
    STUDENT_ID INT PRIMARY KEY ,
    FIRST_NAME VARCHAR(50) ,
    LAST_NAME VARCHAR(50) ,
    GPA DECIMAL (3,2) ,
    ENROLLMENT_DATE DATETIME ,
    MAJOR VARCHAR (100) 
    );


Insert Into Students (STUDENT_ID,FIRST_NAME,LAST_NAME, GPA,ENROLLMENT_DATE,MAJOR) VALUES

(201, 'Shivansh', 'Mahajan', 8.79, '2021-09-01 09:30', 'Computer Science'),
(202, 'Umesh', 'Sharma', 8.44, '2021-09-01 08:30', 'Mathematics'),
(203, 'Rakesh', 'Kumar', 5.6, '2021-09-01 10:00', 'Biology'),
(204, 'Radha', 'Sharma', 9.2, '2021-09-01 12:45', 'Chemistry'),
(205, 'Kush', 'Kumar', 7.85, '2021-09-01 08:30', 'Physics'),
(206, 'Prem', 'Chopra', 9.56, '2021-09-01 09:24', 'History'),
(207, 'Pankaj', 'Vats', 9.78, '2021-09-01 02:30', 'English'),
(208, 'Navleen', 'Kaur', 7, '2021-09-01 06:30', 'Mathematics');

Create Table StudentPrograms (
    STUDENT_REF_ID INT,
    PROGRAM_NAME VARCHAR(100),
    PROGRAM_START_DATE DATETIME,
    FOREIGN KEY (STUDENT_REF_ID) REFERENCES Students(STUDENT_ID)
);

Insert Into StudentPrograms (STUDENT_REF_ID, PROGRAM_NAME, PROGRAM_START_DATE) VALUES

(201, 'Computer Science', '2021-09-01 00:00:00'),
(202, 'Mathematics', '2021-09-01 00:00:00'),
(208, 'Mathematics', '2021-09-01 00:00:00'),
(205, 'Physics', '2021-09-01 00:00:00'),
(204, 'Chemistry', '2021-09-01 00:00:00'),
(207, 'Psychology', '2021-09-01 00:00:00'),
(206, 'History', '2021-09-01 00:00:00'),
(203, 'Biology', '2021-09-01 00:00:00');


Create Table Scholarships (
    STUDENT_REF_ID INT,
    SCHOLARSHIP_AMOUNT INT,
    SCHOLARSHIP_DATE DATETIME,
    PRIMARY KEY (STUDENT_REF_ID, SCHOLARSHIP_DATE)
);

Insert Into SCHOLARSHIPS  (STUDENT_REF_ID, SCHOLARSHIP_AMOUNT , SCHOLARSHIP_DATE) VALUES 

(201, 5000 , '2021-10-15 00:00:00'),
(202, 4500 , '2022-08-18 00:00:00'),
(203, 3000 , '2022-01-25 00:00:00'),
(204, 4000 , '2021-10-15 00:00:00');


SELECT * FROM students ;
SELECT * FROM studentprograms ;
SELECT * FROM scholarships ;

Use students_db ;

SELECT UPPER(FIRST_NAME) AS STUDENT_NAME FROM Students;

SELECT DISTINCT MAJOR from STUDENTS;

SELECT MAJOR FROM STUDENTS GROUP BY(MAJOR);

SELECT SUBSTRING(FIRST_NAME, 1, 3) FROM Students;

SELECT INSTR(LOWER(FIRST_NAME), 'a') FROM Students WHERE FIRST_NAME = 'Shivansh';

SELECT DISTINCT MAJOR, LENGTH(MAJOR) FROM Students;

SELECT REPLACE(FIRST_NAME, 'a', 'A') FROM Students;

SELECT CONCAT(FIRST_NAME, '', LAST_NAME) AS COMPLETE_NAME FROM Students;

SELECT * FROM Students ORDER BY FIRST_NAME, MAJOR DESC;

SELECT * from Students WHERE FIRST_NAME IN ('Prem', 'Shivansh');

SELECT * from Students WHERE FIRST_NAME NOT IN ('Prem', 'Shivansh');

SELECT * FROM Students WHERE FIRST_NAME LIKE '%a';

SELECT * FROM Students WHERE FIRST_NAME LIKE'_ a';

SELECT * FROM Students WHERE GPA BETWEEN 9.00 AND 9.99;

SELECT Major, COUNT(*) as TOTAL_COUNT FROM Students WHERE MAJOR = 'Computer Science';

SELECT CONCAT(FIRST_NAME,'',LAST_NAME) AS FULL_NAME FROM Students WHERE GPA BETWEEN 8.5 and 9.5;

SELECT MAJOR, COUNT(MAJOR) from StudentS group by MAJOR order by COUNT(MAJOR) DESC;

SELECT
Students.FIRST_NAME,
Students.LAST_NAME,
Scholarships.SCHOLARSHIP_AMOUNT,
Scholarships.SCHOLARSHIP_DATE
FROM
Students
INNER JOIN
Scholarships ON Students.STUDENT_ID = Scholarships.STUDENT_REF_ID;

SELECT * FROM Students WHERE student_id % 2!= 0;

SELECT * FROM Students WHERE student_id % 2 = 0;

SELECT Students.FIRST_NAME,Students.LAST_NAME,
Scholarships.SCHOLARSHIP_AMOUNT,
Scholarships.SCHOLARSHIP_DATE FROM Students LEFT JOIN
Scholarships ON Students.STUDENT_ID=
Scholarships.STUDENT_REF_ID;

SELECT * FROM Students ORDER BY GPA DESC LIMIT 5;

SELECT * FROM  Students ORDER BY GPA DESC LIMIT 4,1;


SELECT * FROM Students s1
WHERE 4 =
(SELECT COUNT(DISTINCT (s2.GPA))
 FROM Students s2 
 WHERE s2.GPA >= s1.GPA
);

SELECT s1.* FROM Students s1, Students s2 WHERE s1.GPA = s2.GPA AND s1.Student_id != s2.Student_id;

SELECT MAX(GPA) FROM Students
WHERE GPA NOT IN(SELECT MAX(GPA) FROM Students);

SELECT * FROM Students
UNION ALL
SELECT * FROM Students ORDER BY STUDENT_ID;

SELECT STUDENT_ID FROM Students
WHERE STUDENT_ID NOT IN (SELECT STUDENT_REF_ID FROM Scholarships);

SELECT * FROM Students
LIMIT (SELECT FLOOR(COUNT(*)/2)FROM Students);

SELECT MAJOR, COUNT(MAJOR) AS MAJOR_COUNT FROM Students GROUP BY MAJOR HAVING COUNT(MAJOR) <4;

SELECT MAJOR, COUNT(MAJOR) AS ALL_MAJOR FROM Students GROUP BY MAJOR;

SELECT * FROM Students WHERE STUDENT_ID = (SELECT MAX(STUDENT_ID) FROM STUDENTS);

SELECT * FROM Students WHERE STUDENT_ID = (SELECT MIN(STUDENT_ID) FROM Students);

SELECT * FROM ( SELECT * FROM Students ORDER BY STUDENT_ID DESC LIMIT 5)
 AS subquery
 ORDER BY STUDENT_ID;
 
SELECT DISTINCT GPA FROM Students S1
WHERE 3 >= (SELECT COUNT(DISTINCT GPA) FROM Students S2 WHERE S1.GPA <= S2.GPA)
ORDER BY S1.GPA DESC;

SELECT DISTINCT GPA FROM Students S1
WHERE 3 >= (SELECT COUNT(DISTINCT GPA) FROM Students S2 WHERE S1.GPA >= S2.GPA)
ORDER BY S1.GPA;

SELECT DISTINCT GPA FROM Students S1
WHERE 4 = (SELECT COUNT(DISTINCT GPA) FROM Students S2 WHERE S1.GPA <= S2.GPA)
ORDER BY S1.GPA DESC;

SELECT MAJOR, MAX(GPA) as MAXGPA FROM Students GROUP BY MAJOR;

SELECT FIRST_NAME, GPA FROM Students WHERE GPA = (SELECT

MAX(GPA) FROM Students);

SELECT CURDATE();-- To get the current date

SELECT NOW(); -- To get the current date and time

CREATE TABLE CloneTable AS SELECT * FROM students;

UPDATE Students SET GPA = 7.5 WHERE MAJOR = 'Computer Science' ;

SELECT MAJOR, AVG(GPA) AS AVERAGE_GPA FROM Students GROUP BY MAJOR;

SELECT * FROM Students ORDER BY GPA DESC LIMIT 3;

SELECT MAJOR, COUNT(STUDENT_ID) AS HIGH_GPA_COUNT FROM Students
WHERE GPA > 7.5
GROUP BY MAJOR;

SELECT * FROM Students WHERE GPA = (SELECT GPA FROM Students WHERE STUDENT_ID = 201);


